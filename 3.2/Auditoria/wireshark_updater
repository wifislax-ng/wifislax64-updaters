#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20220222

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=wireshark
	EXTENSION=tar.xz
	GESTOR=wget
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://www.wireshark.org/download/src/
	VERSION=$(curl -s https://www.wireshark.org|grep -i stable|head -1|rev|cut -d ' ' -f1|rev|sed 's/.$//g')
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	CD=$PRGNAM-$VERSION
	DOWNLOAD=$WEB/$SOURCES
}

# Comprobar dependencias
F_dependencias(){
DEPENDENCIAS="
libmaxminddb
rubygem-asciidoctor
libsmi
snappy
libminizip
libilbc
lua
"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo "LS0tIHdpcmVzaGFyay0zLjIuMC9zaGFya2Rfc2Vzc2lvbi5jLm9yaWcJMjAxOS0xMi0yNCAwNzox
ODozMy4yODg5NzYxNjMgKzA3MDAKKysrIHdpcmVzaGFyay0zLjIuMC9zaGFya2Rfc2Vzc2lvbi5j
CTIwMTktMTItMjQgMDc6MTg6NTIuNDQ4MTY4ODA4ICswNzAwCkBAIC0xNiw2ICsxNiw3IEBACiAj
aW5jbHVkZSA8c3RkYXJnLmg+CiAjaW5jbHVkZSA8c3RyaW5nLmg+CiAjaW5jbHVkZSA8ZXJybm8u
aD4KKyNpbmNsdWRlIDxzdGRpbnQuaD4KIAogI2luY2x1ZGUgPGdsaWIuaD4KIAo=
"|base64 -d > $TMP/wireshark.patch
patch -p1 -i $TMP/wireshark.patch||exit 1
echo ""
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1
mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_MANDIR=/usr/man \
    -DCMAKE_INSTALL_DOCDIR=/usr/doc \
    -DCMAKE_INSTALL_LIBDIR=lib${LIBDIRSUFFIX} \
    -DCMAKE_BUILD_TYPE=Release ..

# Compilamos
echo ""
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1
make || exit 1
make install DESTDIR=$PKG || exit 1
cd ..

mkdir -p $PKG/usr/include/$PRGNAM/{epan/{crypt,dfilter,dissectors,ftypes,wmem},wiretap,wsutil}
install -m644 ws_diag_control.h ws_symbol_export.h $PKG/usr/include/$PRGNAM
  for d in epan epan/crypt epan/dfilter epan/dissectors epan/ftypes; do
    install -m644 $d/*.h $PKG/usr/include/$PRGNAM/$d
  done

mkdir -p $PKG/usr/share/{applications,metainfo,mime/packages}
cp org.wireshark.Wireshark.desktop $PKG/usr/share/applications
cp org.wireshark.Wireshark.metainfo.xml $PKG/usr/share/metainfo
cp org.wireshark.Wireshark-mime.xml $PKG/usr/share/mime/packages

rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# Creamos una config basica
CONFIG=$PKG/$HOME/.$PRGNAM
mkdir -p $CONFIG

echo "# Main window maximized.
# TRUE or FALSE (case-insensitive).
gui.geometry_main_maximized: TRUE
# Warn if running with elevated permissions (e.g. as root).
# TRUE or FALSE (case-insensitive).
privs.warn_if_elevated: FALSE" > $CONFIG/recent
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del script
f_versionInstalada
# Comprobar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Descomprimir sources
f_descomprimir
#Cd a ruta
f_cd
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales