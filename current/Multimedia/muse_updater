#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20200628
CATEGORIA="Editores de audio"

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=muse
	EXTENSION=tar.gz
	GESTOR=wget
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=https://sourceforge.net/projects/lmuse/files
	VERSION=$(curl -s $WEB/|grep /latest|head -1|rev|cut -f 3- -d .|cut -f 1 -d -|rev)
	SOURCES=$PRGNAM-$VERSION.$EXTENSION
	CD=$PRGNAM-$VERSION
	DOWNLOAD=$WEB/$PRGNAM-$(echo $VERSION|cut -c 1-3)/$SOURCES
}

# Comprobar dependencias
F_dependencias(){
DEPENDENCIAS="libffado celt jack ladspa_sdk liblo lash dssi"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo 
echo "$VERDE"Configurando ..."$CIERRE"
sleep 1
mkdir -p build
cd build

  cmake -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=release \
        -DLIB_SUFFIX=${LIBDIRSUFFIX} \
        -DCMAKE_ENABLE_VST_VESTIGE=1 \
        -DCMAKE_ENABLE_VST_NATIVE=1 \
        -DENABLE_PYTHON=1 \
        -DENABLE_FLUID=1 \
        -DENABLE_DSSI=1 \
        -DENABLE_LASH=1 \
        -DENABLE_OSC=1 ..
    
echo 
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1
make || exit 1
make install DESTDIR=$PKG || exit 1
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Comprobamos version instalada del paquete
f_versionInstalada
#Compronar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Descomprimir sources
f_descomprimir
#Cd a ruta
f_cd
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales