#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20200628
CATEGORIA="Editores de video"

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################

F_variables() {
	PRGNAM=avidemux
	EXTENSION=tar.gz
	GESTOR=wget
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=http://fixounet.free.fr/avidemux/download.html
	VERSION=$(curl -s $WEB|grep .tar.gz|head -1|cut -d _ -f2|cut -d t -f1|sed "s/.$//g")
	SOURCES=${PRGNAM}_${VERSION}.$EXTENSION
	CD=${PRGNAM}_${VERSION}
	DOWNLOAD=https://downloads.sourceforge.net/avidemux/$SOURCES
}

F_dependencias(){
DEPENDENCIAS="libffado celt aften amrnb jack x265 faac faad2 libdca x264 xvidcore"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo 
echo "$VERDE"Compilando ..."$CIERRE"
sleep 1
 
mkdir -p build_core
cd build_core
cmake \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DFAKEROOT="$PKG" \
  ../avidemux_core
make || exit 1
make install DESTDIR=$PKG
cd ..


  mkdir -p build_qt4
  cd build_qt4
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DFAKEROOT="$PKG" \
    ../avidemux/qt4
  make || exit 1
  make install DESTDIR=$PKG
  cd ..

  mkdir -p build_cli
  cd build_cli
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DFAKEROOT="$PKG" \
    ../avidemux/cli
  make || exit 1
  make install DESTDIR=$PKG
  cd ..

mkdir -p build_plugins_common
cd build_plugins_common
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DAVIDEMUX_SOURCE_DIR="$TMP/${PRGNAM}_${VERSION}" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DPLUGIN_UI=COMMON \
    -DFAKEROOT="$PKG" \
    ../avidemux_plugins
  make || exit 1
  make install DESTDIR=$PKG
cd ..


  mkdir -p build_plugins_qt4
  cd build_plugins_qt4
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DAVIDEMUX_SOURCE_DIR="$TMP/${PRGNAM}_${VERSION}" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DPLUGIN_UI=QT4 \
    -DFAKEROOT="$PKG" \
    ../avidemux_plugins
  make || exit 1
  make install DESTDIR=$PKG
  cd ..


  mkdir -p build_plugins_cli
  cd build_plugins_cli
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DAVIDEMUX_SOURCE_DIR="$TMP/${PRGNAM}_${VERSION}" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DPLUGIN_UI=CLI \
    -DFAKEROOT="$PKG" \
    ../avidemux_plugins
  make || exit 1
  make install DESTDIR=$PKG
  cd ..

mkdir -p $PKG/usr/share/applications
mkdir -p $PKG/usr/share/pixmaps

cat avidemux2.desktop | sed -e 's/avidemux2$/avidemux/' -e 's/2_gtk/3_qt4/' >\
	$PKG/usr/share/applications/avidemux_qt.desktop

install -m644 avidemux_icon.png $PKG/usr/share/pixmaps/avidemux.png
for sz in 16x16 32x32 48x48 64x64 ; do
  mkdir -p $PKG/usr/share/icons/hicolor/$sz/apps
  convert avidemux_icon.png -resize $sz \
    $PKG/usr/share/icons/hicolor/$sz/apps/avidemux.png
done
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Comprobamos version instalada del paquete
f_versionInstalada
# Comprobar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Descomprimir sources
f_descomprimir
#Cd a ruta
f_cd
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales