#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20240229

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=google-chrome
	GESTOR=wget
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB=https://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-stable
	RAMA="$(curl -s $WEB|grep -om1 "google-chrome-stable_[0-9]*.*"|awk -F'_' '{print $2}'|cut -d- -f2)"
	VERSION="$(curl -s $WEB|grep -om1 "google-chrome-stable_[0-9]*.*"|awk -F'_' '{print $2}'|cut -d- -f-1)"
	SOURCES=google-chrome-stable_${VERSION}-${RAMA}_amd64.deb
	DOWNLOAD=http://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/$SOURCES
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){
echo "$VERDE"
echo "Etrayendo contenido del fichero .deb"
echo "$CIERRE"
sleep 1
mkdir -p "$TMP/deb"
deb2dir $TMP/$SOURCES "$TMP/deb"
rm -rf "$TMP/deb"/{etc,usr/share/man/,usr/share/doc,/usr/share/menu,/usr/share/gnome-control-center}
rm -rf "$TMP/deb"/usr/share/applications/*.desktop

# Symlink desktop environment icons hicolor
for png in "$TMP/deb"/opt/google/chrome/product_logo_*.png; do
  pngsize="${png##*/product_logo_}"
  mkdir -p "$TMP/deb"/usr/share/icons/hicolor/${pngsize%.png}x${pngsize%.png}/apps
  (
    cd "$TMP/deb"/usr/share/icons/hicolor/${pngsize%.png}x${pngsize%.png}/apps/
    ln -s ../../../../../../opt/google/chrome/product_logo_${pngsize} google-chrome.png
  )
done

# Symlink desktop environment icons oxygen
for png in "$TMP/deb"/opt/google/chrome/product_logo_*.png; do
  pngsize="${png##*/product_logo_}"
  mkdir -p "$TMP/deb"/usr/share/icons/oxygen/base/${pngsize%.png}x${pngsize%.png}/apps
  (
    cd "$TMP/deb"/usr/share/icons/oxygen/base/${pngsize%.png}x${pngsize%.png}/apps/
    ln -s ../../../../../../../opt/google/chrome/product_logo_${pngsize} google-chrome.png
  )
done

mkdir -p $PKG/usr/share/pixmaps
cp -rf "$TMP/deb"/opt/google/chrome/product_logo_64.png $PKG/usr/share/pixmaps/google-chrome.png

echo "[Desktop Entry]
Categories=Application;Network;
Comment[es_ES]=
Comment=
Encoding=UTF-8
Exec=/opt/google/chrome/google-chrome --test-type --user-data-dir= --no-sandbox %u
GenericName[es_ES]=Navegador Web
GenericName=Navegador Web
Icon=google-chrome
MimeType=text/html;
Name[es_ES]=Google-chrome
Name=Google-chrome
Path=
StartupNotify=false
Terminal=false
TerminalOptions=
Type=Application
X-DBUS-ServiceName=
X-DBUS-StartupType=
X-KDE-SubstituteUID=false
X-KDE-Username=" > "$TMP/deb"/usr/share/applications/$PRGNAM.desktop
chmod +x "$TMP/deb"/usr/share/applications/$PRGNAM.desktop
cp -rfp "$TMP"/deb/* "$PKG"
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Comprobamos version instalada del script
f_versionInstalada
#Si no existe el fichero se descargara
f_download
#Descomprimir fichero descargado y compilamos
F_compilar
#Creamos xzm , instalamos y salimos
f_tareasFinales